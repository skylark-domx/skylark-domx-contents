{"version":3,"sources":["editable.js"],"names":["define","langx","$","contents","hotkeys","Util","InputManager","Selection","UndoManager","Keystroke","Formatter","Indentation","Clipboard","Editor","Evented","inherit","init","el","opts","this","textarea","body","pluginOpts","classPrefix","util","Error","inputManager","selection","undoManager","keystroke","formatter","indentation","clipboard","os","mac","addClass","linux","mobile","browser","mozilla","reflow","document","execCommand","_error","e","setValue","val","get","innerHTML","format","decorate","lastCaretPosition","getValue","sync","children","cloneBody","emptyP","firstP","lastP","clone","undecorate","autolink","last","first","is","isEmptyNode","prev","remove","next","find","trim","html","focus","$blockEl","range","caretPosition","append","phBr","appendTo","createRange","setRangeAtEndOf","blur","editable"],"mappings":"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","file":"../editable.js","sourcesContent":["define([\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-utils-dom/query\",\r\n\t\"./contents\",\r\n\t\"./hotkeys\",\r\n\t\"./Util\",\r\n\t\"./InputManager\", \r\n\t\"./Selection\", \r\n\t\"./UndoManager\", \r\n\t\"./Keystroke\",\r\n\t\"./Formatter\", \r\n\t\"./Indentation\", \r\n\t\"./Clipboard\"\r\n],function(langx, $, contents,hotkeys,Util,InputManager,Selection,UndoManager,Keystroke,Formatter,Indentation,Clipboard){\r\n  var Editor = langx.Evented.inherit({\r\n    init : function(el,opts) {\r\n    \tthis.el = el;\r\n    \tthis.textarea = $(opts.textarea);\r\n    \tthis.body = $(opts.body);\r\n\r\n    \tvar pluginOpts = {\r\n    \t\tclassPrefix : opts.classPrefix\r\n    \t};\r\n\r\n      this.util = new Util(this,pluginOpts);\r\n\r\n      if (hotkeys) {\r\n        this.hotkeys = hotkeys({\r\n          el: this.body\r\n        });\r\n      } else {\r\n        throw new Error('simditor: simple-hotkeys is required.');\r\n        return;\r\n      }\r\n      this.inputManager = new InputManager(this,pluginOpts);\r\n      this.selection = new Selection(this,pluginOpts);\r\n      this.undoManager = new UndoManager(this,pluginOpts);\r\n      this.keystroke = new Keystroke(this,pluginOpts);\r\n      this.formatter = new Formatter(this,pluginOpts);\r\n      this.indentation = new Indentation(this,pluginOpts);\r\n      this.clipboard = new Clipboard(this,pluginOpts);\r\n\r\n\t\tif (this.util.os.mac) {\r\n\t\t  this.el.addClass(opts.classPrefix + 'mac');\r\n\t\t} else if (this.util.os.linux) {\r\n\t\t  this.el.addClass(opts.classPrefix + 'linux');\r\n\t\t}\r\n\t\tif (this.util.os.mobile) {\r\n\t\t  this.el.addClass(opts.classPrefix + 'mobile');\r\n\t\t}\r\n\r\n      if (this.util.browser.mozilla) {\r\n        this.util.reflow();\r\n        try {\r\n          document.execCommand('enableObjectResizing', false, false);\r\n          return document.execCommand('enableInlineTableEditing', false, false);\r\n        } catch (_error) {\r\n          e = _error;\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n\tsetValue : function(val) {\r\n\t\tthis.textarea.val(val);\r\n\t\tthis.body.get(0).innerHTML = val;\r\n\t\tthis.formatter.format();\r\n\t\tthis.formatter.decorate();\r\n\t\tthis.util.reflow(this.body);\r\n\t\tthis.inputManager.lastCaretPosition = null;\r\n\t},\r\n\r\n\tgetValue : function() {\r\n\t\treturn this.sync();\r\n\t},\r\n\r\n\tsync : function() {\r\n\t\tvar children, cloneBody, emptyP, firstP, lastP, val;\r\n\t\tcloneBody = this.body.clone();\r\n\t\tthis.formatter.undecorate(cloneBody);\r\n\t\tthis.formatter.format(cloneBody);\r\n\t\tthis.formatter.autolink(cloneBody);\r\n\t\tchildren = cloneBody.children();\r\n\t\tlastP = children.last('p');\r\n\t\tfirstP = children.first('p');\r\n\t\twhile (lastP.is('p') && this.util.isEmptyNode(lastP)) {\r\n\t\t  emptyP = lastP;\r\n\t\t  lastP = lastP.prev('p');\r\n\t\t  emptyP.remove();\r\n\t\t}\r\n\t\twhile (firstP.is('p') && this.util.isEmptyNode(firstP)) {\r\n\t\t  emptyP = firstP;\r\n\t\t  firstP = lastP.next('p');\r\n\t\t  emptyP.remove();\r\n\t\t}\r\n\t\tcloneBody.find('img.uploading').remove();\r\n\t\tval = langx.trim(cloneBody.html());\r\n\t\tthis.textarea.val(val);\r\n\t\treturn val;\r\n\t},\r\n\r\n\tfocus : function() {\r\n\t\tvar $blockEl, range;\r\n\t\tif (!(this.body.is(':visible') && this.body.is('[contenteditable]'))) {\r\n\t\t  this.el.find('textarea:visible').focus();\r\n\t\t  return;\r\n\t\t}\r\n\t\tif (this.inputManager.lastCaretPosition) {\r\n\t\t  this.undoManager.caretPosition(this.inputManager.lastCaretPosition);\r\n\t\t  return this.inputManager.lastCaretPosition = null;\r\n\t\t} else {\r\n\t\t  $blockEl = this.body.children().last();\r\n\t\t  if (!$blockEl.is('p')) {\r\n\t\t    $blockEl = $('<p/>').append(this.util.phBr).appendTo(this.body);\r\n\t\t  }\r\n\t\t  range = document.createRange();\r\n\t\t  return this.selection.setRangeAtEndOf($blockEl, range);\r\n\t\t}\r\n\t},\r\n\r\n\tblur : function() {\r\n\t\tif (this.body.is(':visible') && this.body.is('[contenteditable]')) {\r\n\t\t  return this.body.blur();\r\n\t\t} else {\r\n\t\t  return this.body.find('textarea:visible').blur();\r\n\t\t}\r\n\t}\r\n\r\n\r\n  });\r\n\r\n\r\n\tfunction editable(el,opts) {\r\n\r\n\t\t/*\t\r\n\t\tif (value === undefined) {\r\n   \t\t\treturn node.contentEditable == \"true\"\r\n\t\t} else {\r\n\t\t\tif (!value) {\r\n\t\t\t\tvalue = null;\r\n\t\t\t} else {\r\n\t\t\t\tvalue = \"true\";\r\n\t\t\t}\r\n\t\t\tdatax.attr(node,\"contentEditable\",value);\r\n\t\t}\r\n\t\t*/\r\n\t\treturn new Editor(el,opts);\r\n\t\t\r\n\t};\r\n\r\n\r\n\treturn contents.editable  = editable;\r\n\t\r\n});"]}